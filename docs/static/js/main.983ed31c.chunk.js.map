{"version":3,"sources":["images/logo.png","components/Header.js","components/FilterByName.js","components/FilterBySpecies.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/CaracterDetail.js","services/getDataFromApi.js","components/App.js","index.js"],"names":["Header","className","src","logo","alt","title","FilterByName","props","onSubmit","ev","preventDefault","htmlFor","value","filterByName","type","name","id","onChange","e","handleFilter","key","target","FilterBySpecies","Filters","CharacterCard","isDead","cartoon","status","image","species","CharacterList","uElements","cartoons","map","to","length","CaracterDetail","origin","episode","getDataFromApi","fetch","then","response","json","data","results","App","useState","setCartoons","setName","setSpecies","useEffect","filterCartoons","filter","toUpperCase","includes","path","exact","inputChange","render","routerProps","routerCartoonId","parseInt","match","params","cartoonFound","find","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.983ed31c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import React from \"react\";\r\nimport logo from \"../images/logo.png\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <div className=\"bigheader\">\r\n        <img className=\"logo\" src={logo} alt=\"logo\" title=\"logo de la serie\" />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","const FilterByName = (props) => {\r\n  const handleChange = (e) => {\r\n    props.handleFilter({\r\n      key: \"name\",\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleForm = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleForm}>\r\n      <label className=\"form\" htmlFor=\"name\">\r\n        Filtrar por nombre:\r\n      </label>\r\n      <input\r\n        className=\"input\"\r\n        value={props.filterByName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        onChange={handleChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\nexport default FilterByName;\r\n","const FilterBySpecies = (props) => {\r\n  const handleChange = (e) => {\r\n    props.handleFilter({\r\n      key: \"species\",\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  const handleForm = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <form onSubmit={handleForm}>\r\n      <label className=\"form\" htmlFor=\"species\">\r\n        Filtrar por especie:\r\n      </label>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        name=\"species\"\r\n        id=\"species\"\r\n        onChange={handleChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\nexport default FilterBySpecies;\r\n","import FilterByName from \"./FilterByName\";\r\nimport FilterBySpecies from \"./FilterBySpecies\";\r\n\r\nconst Filters = (props) => {\r\n  return (\r\n    <section className=\"sectionLook\">\r\n      <FilterByName\r\n        handleFilter={props.handleFilter}\r\n        filterByName={props.filterByName}\r\n      />\r\n      <FilterBySpecies handleFilter={props.handleFilter} />\r\n    </section>\r\n  );\r\n};\r\nexport default Filters;\r\n","import React from \"react\";\r\n\r\nconst CharacterCard = (props) => {\r\n  const isDead = props.cartoon.status;\r\n  return (\r\n    <div className=\"card\">\r\n      <img\r\n        className=\"photo\"\r\n        src={props.cartoon.image}\r\n        alt={`Foto de ${props.cartoon.name}`}\r\n        title={`Foto de ${props.cartoon.name}`}\r\n      />\r\n      <article>\r\n        <h4 className=\"name\">{props.cartoon.name}</h4>\r\n        <p className=\"species\">{props.cartoon.species}</p>\r\n        {isDead === \"Dead\" ? (\r\n          <>\r\n            <p className=\"species\">\r\n              {props.cartoon.status} <i className=\"fas fa-skull myicon\"></i>\r\n            </p>\r\n          </>\r\n        ) : (\r\n          <p className=\"species\">{props.cartoon.status}</p>\r\n        )}\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import CharacterCard from \"./CharacterCard\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterList = (props) => {\r\n  const uElements = props.cartoons.map((cartoon) => {\r\n    return (\r\n      <li key={cartoon.id}>\r\n        <Link className=\"link\" to={`/cartoon/${cartoon.id}`}>\r\n          <CharacterCard cartoon={cartoon} />\r\n        </Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  if (props.filterByName !== \"\" && props.cartoons.length === 0) {\r\n    return (\r\n      <section>\r\n        <p className=\"textnot\">\r\n          No hay ning√∫n personaje que coincida con la palabra{\" \"}\r\n          {props.filterByName}\r\n        </p>\r\n      </section>\r\n    );\r\n  } else {\r\n    return (\r\n      <section>\r\n        <ul className=\"list\">{uElements}</ul>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CharacterList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst CaracterDetail = (props) => {\r\n  return (\r\n    <div>\r\n      <span className=\"return\">\r\n        <Link className=\"link\" to=\"/\">\r\n          {\" \"}\r\n          {\"\\u003c\"} Volver{\" \"}\r\n        </Link>\r\n      </span>\r\n\r\n      <div>\r\n        <article className=\"cardDetail\">\r\n          <img\r\n            className=\"cartoonImg\"\r\n            src={props.cartoon.image}\r\n            alt={`Foto de ${props.cartoon.name}`}\r\n            title={`Foto de ${props.cartoon.name}`}\r\n          />\r\n          <div className=\"cartoonDetailText\">\r\n            <h4>{props.cartoon.name}</h4>\r\n            <p className=\"nameD\">Status: {props.cartoon.status}</p>\r\n            <p className=\"nameD\">Origin: {props.cartoon.origin}</p>\r\n            <p className=\"nameD\">Episodes: {props.cartoon.episode}</p>\r\n          </div>\r\n\r\n          <Link to=\"/\">\r\n            <span></span>\r\n          </Link>\r\n        </article>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaracterDetail;\r\n","const getDataFromApi = () => {\r\n  return fetch(\r\n    // \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\r\n    \"//rickandmortyapi.com/api/character\"\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((cartoon) => {\r\n        return {\r\n          id: cartoon.id,\r\n          name: cartoon.name,\r\n          species: cartoon.species,\r\n          image: cartoon.image,\r\n          origin: cartoon.origin.name,\r\n          episode: cartoon.episode.length,\r\n          status: cartoon.status,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Filters from \"./Filters\";\r\nimport CharacterList from \"./CharacterList\";\r\nimport CaracterDetail from \"./CaracterDetail\";\r\nimport getDataFromApi from \"../services/getDataFromApi\";\r\nimport \"../stylesheets/index.css\";\r\n\r\nconst App = () => {\r\n  const [cartoons, setCartoons] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [species, setSpecies] = useState(\"\");\r\n\r\n  //loading true o false\r\n  useEffect(() => {\r\n    getDataFromApi().then((data) => setCartoons(data));\r\n    // setLoading(false);\r\n  }, []);\r\n\r\n  const handleFilter = (inputChange) => {\r\n    if (inputChange.key === \"name\") {\r\n      setName(inputChange.value);\r\n    } else if (inputChange.key === \"species\") {\r\n      setSpecies(inputChange.value);\r\n    }\r\n  };\r\n\r\n  const filterCartoons = cartoons\r\n    .filter((cartoon) => {\r\n      return cartoon.name.toUpperCase().includes(name.toUpperCase());\r\n    })\r\n    .filter((cartoon) => {\r\n      return cartoon.species.toUpperCase().includes(species.toUpperCase());\r\n    });\r\n\r\n  const renderDetail = (routerProps) => {\r\n    const routerCartoonId = parseInt(routerProps.match.params.id);\r\n    const cartoonFound = cartoons.find(\r\n      (cartoon) => cartoon.id === routerCartoonId\r\n    );\r\n\r\n    if (cartoonFound) {\r\n      return <CaracterDetail cartoon={cartoonFound} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Filters handleFilter={handleFilter} filterByName={name} />\r\n          <CharacterList\r\n            // loading={loading}\r\n            cartoons={filterCartoons}\r\n            filterByName={name}\r\n          />\r\n        </Route>\r\n        <Route path=\"/cartoon/:id\" render={renderDetail} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}